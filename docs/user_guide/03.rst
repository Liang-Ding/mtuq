
Green's functions
=================

The response of a medium to an impulsive source is called a Green's function.  This page explains how Green's functions are used in source inversions.   It describes the types of Green's functions supported by MTUQ and how they can be acquired.


Role of Green's functions
-------------------------

In source inversions, the main reason Green's functions are useful is that they provide computaional savings.  It is usually cheaper to generate synthetics by summing Green's functions than it is to perform many individual wavefield simulations.

In MTUQ, `GreensTensor objects <https://uafgeotools.github.io/mtuq/library>`_ provide access to the full set of Green's functions needed to describe the medium response between a given station and origin.



Downloading precomputed Green's functions
-----------------------------------------

One of the easiest ways to acquire Green's functions is to download them using `syngine <http://ds.iris.edu/ds/products/syngine/>`_.  The syngine webservice makes Green's functions available from the following 1D Earth models: PREM, AK135, and iasp91.

At the time this documentation was written, one limitation of syngine is that Green's functions are availble from only a handful of Earth models.  Another limitation is that syngine provides Green's functions only at specific stations, not over the whole Earth.  If these limitations affect your use case, an alternative is to compute your own Green's function database, as described below.


Computing Green's functions for 1D Earth models
-----------------------------------------------

MTUQ currently supports 1D Green's functions from two solvers: AxiSEM (preferred) and FK.

`AxiSEM <https://github.com/geodynamics/axisem>`_ simulates wave propagation in radially-symmeric Earth models using a spectral-element method.  To generate synthetics in format MTUQ natively supports, follow the instructions for in the `AxiSEM user manual <https://geodynamics.org/cig/software/axisem/axisem-manual.pdf>`_  under "Output wavefields in NetCDF formated needed by instaseis."  AxiSEM NetCDF files can be used to retrieve vertical, radial, and transverse  displacement in units of m*(N-m)^-1.

To open an AxiSEM database client in MTUQ:

.. code ::

   from mtuq import open_db
   db = open_db(path_to_NetCDF_file, format="AxiSEM")


`FK <https://www.eas.slu.edu/People/LZhu/home.html>`_ simulates wave propagation in horizontally-layered elastic media using  frequency-wavenumber method.   FK  simulations create SAC files in a directory tree organized by model, event depth, and event distance.  Each SAC file represents a vertical, radial, or transverse velocity time series in units of 10^-20*cm*(dyne-cm)^-1 s^-1.


To open an FK database client in MTUQ:

.. code ::

   from mtuq import open_db
   db = open_db(path_to_FK_directory_tree, format="FK")



Once opened, an AxiSEM of FK database client can be used to generate ``GreensTensor`` objects:

.. code::

   greens_tensors = db.get_greens_tensors(stations, origin)





Computing Green's functions for 3D Earth models
-----------------------------------------------

.. warning::
  
   This section describes features still under development.  The documentation may be incomplete or describe planned rather than current functionality.


MTUQ currently supports 3D Green's functions from SPECFEM3D.  Output must be saved at individual stations using the CMT3D filename convention.


Green's function conventions
----------------------------

A variety of Green's function conventions exist.  Figuring out which are used in a particular application can be challenging because it depends on

- the type of medium under consideration (for example, acoustic media require fewer independent Green's functions than elastic media)

- the choice of local Cartesian basis conventions (for example, some authors employ "Up-South-East", others "North-East-Down"; see `ObsPy documentation <https://docs.obspy.org/packages/autogen/obspy.imaging.mopad_wrapper.beach.html#supported-basis-systems>`_ for more information)

One of the major design goals of MTUQ is to avoid exposing users to unnecessary basis convention complexity. MTUQ accomplishes this by understanding external formats and converting to a common internal format that works for both one-dimensional and three-dimensional media. For local Cartesian representations, MTUQ consistently uses an 'Up-South-East' convention.


