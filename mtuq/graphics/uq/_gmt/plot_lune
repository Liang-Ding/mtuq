#!/bin/bash -e

#
# PLOT_LUNE
#    plots values from ASCII file on eigenvalue lune
#


# add mtuq/graphics/_gmt to the path
export PATH=${PATH:+${PATH}:}$(dirname ${BASH_SOURCE[0]})
source _gmt_functions


# parse input arguments
if [ $# -lt 15 ] ; then
    echo "plot_lune: bad input arguments"
    exit -1
fi

# output file
filename=$1
filetype=$2

# ASCII input files
ascii_data=$3
supplemental_data=$4

# colorbar
value_min=$5
value_max=$6
value_exp=$7
cpt_step=$8
cpt_name=$9
flip_cpt=${10}
colorbar_type=${11}
colorbar_label=""

# markers
marker_coords=${12}
marker_type=${13}

title="${14}"
subtitle="${15}"

proj_arg="-JH0/3.4i"
area_arg="-R-30/30/-90/90"

out=${filename}
ps="${out}.ps"
tmp=tmp_${out//\//__}


# apply default settings
gmt_settings


# display background grid
gmt psbasemap $proj_arg $area_arg -Bf10g10/f10g10 -Xc -Yr1.2 -K > $ps


# generate color palette
cpt_args=$( get_cpt_args $cpt_name $flip_cpt )
range_arg="-T${value_min}/${value_max}/${cpt_step}"
gmt makecpt $cpt_args -D $range_arg > $tmp.cpt

# plot misfit values
gmt pscontour $ascii_data $proj_arg $area_arg -C$tmp.cpt -I -N -A- -O -K >> $ps


# plot focal mechanisms tradeoffs
if [ -f $supplemental_data ]; then
    gmt psmeca $supplemental_data -N -Sm0.2 $proj_arg $area_arg -Z$cpt_name -O -K >> $ps
fi


# display reference arcs
add_lune_arcs $ps $proj_arg $area_arg


# display title
add_title_lune $ps $proj_arg $area_arg "$title" "$subtitle"


# display colorbar
if [ $colorbar_type -ne 0 ]; then
    arg1=$( get_colorbar_arg1 "$colorbar_label" )
    arg2=$( get_colorbar_arg2 $value_exp )
fi

if [ $colorbar_type -eq 1 ]; then
    # small colorbar with long label at bottom
    gmt psscale -C$tmp.cpt -D0.5/-0.4+w2.4/0.2+h "$arg1" "$arg2" -O -K >> $ps

fi

if [ $colorbar_type -eq 2 ]; then
    # medium colorbar with long label at bottom
    gmt gmtset FONT_ANNOT 18p
    gmt gmtset FONT_LABEL 18p
    gmt psscale -C$tmp.cpt -D0.5/-0.5+w2.4/0.3+h "$arg1" "$arg2" -O -K >> $ps

fi

if [ $colorbar_type -eq 3 ]; then
    # large colorbar with long label at bottom
    gmt gmtset FONT_ANNOT 32p
    gmt gmtset FONT_LABEL 32p
    gmt psscale -C$tmp.cpt -D0.5/-0.5+w2.4/0.3+h "$arg1" "$arg2" -O -K >> $ps

fi

if [ $colorbar_type -eq 4 ]; then
    # small colorbar with short label at bottom
    gmt psscale -C$tmp.cpt -D0.5/-0.4+w2.4/0.2+h "$arg1" "$arg2" -O -K >> $ps

fi

if [ $colorbar_type -eq 5 ]; then
    # medium colorbar with short label at bottom
    gmt gmtset FONT_ANNOT 18p
    gmt gmtset FONT_LABEL 18p
    gmt psscale -C$tmp.cpt -D0.5/-0.5+w2.4/0.3+h "$arg1" "$arg2" -O -K >> $ps

fi

if [ $colorbar_type -eq 6 ]; then
    # large colorbar with short label at bottom
    gmt gmtset FONT_ANNOT 30p
    gmt gmtset FONT_LABEL 30p
    gmt psscale -C$tmp.cpt -D0.5/-0.5+w2.4/0.3+h "$arg1" "$arg2" -O -K >> $ps

fi


# read marker coordinates from marker_coords file, if it exists
if [ -f $marker_coords ]; then
    add_markers_from_file "$marker_coords" "$ps" $proj_arg $area_arg


elif [ $marker_type -ne 0 ]; then
    add_marker $marker_type "$ascii_data" "$ps" $proj_arg $area_arg
fi


custom_psclose $ps
custom_psconvert $ps $out $filetype


#echo "  finished writing: $out"


rm $tmp*
rm $ps


